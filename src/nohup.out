********************************************************************************
DEVICE == cpu // PyTorch v1.2.0+cu92
********************************************************************************
GlobalConfig()
Cropping to 128
cache_p=/nobackup/joon/1_Projects/L3C-PyTorch/data/cache.pkl does not exist.
WARN: Given cache_p=/nobackup/joon/1_Projects/L3C-PyTorch/data/cache.pkl, but key not found:
('/nobackup/joon/1_Projects/L3C-PyTorch/data/train_oi', 128)
Found:

Recursively traversing /nobackup/joon/1_Projects/L3C-PyTorch/data/train_oi...
>> Image.open(/nobackup/joon/1_Projects/L3C-PyTorch/data/train_oi/01c752bda09f3e9e.png)
img.shape= (520, 780, 3)
Created DataLoader [train] 1 batches -> 1 imgs
INFO: No file found at /nobackup/joon/1_Projects/L3C-PyTorch/src/train/fixedimg.jpg
cache_p=/nobackup/joon/1_Projects/L3C-PyTorch/data/cache.pkl does not exist.
WARN: Given cache_p=/nobackup/joon/1_Projects/L3C-PyTorch/data/cache.pkl, but key not found:
('/nobackup/joon/1_Projects/L3C-PyTorch/data/val_oi', None)
Found:

Recursively traversing /nobackup/joon/1_Projects/L3C-PyTorch/data/val_oi...
Created DataLoader [val] 1 batches -> 1 imgs
MultiscaleNetwork(
  scales=3 / 3 nets / 3 ps
  (sub_rgb_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (heads): ModuleList(
    (0): RGBHead(MeanShift//Head(C=3))
    (1): Head(Conv(64))
    (2): Head(Conv(64))
  )
  (nets): ModuleList(
    (0): Net(
      (enc): EDSRLikeEnc(
        Levels=-1.0,-0.9,-0.8,-0.8,-0.7,-0.6,-0.5,-0.4,-0.3,-0.2,-0.2,-0.1,0.0,0.1,0.2,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.8,0.9,1.0
        (down): Conv2d(64, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (body): Sequential(
          (0): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (1): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (2): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (3): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (4): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (5): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (6): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (7): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (to_q): Sequential(
          (0): Conv2d(64, 5, kernel_size=(1, 1), stride=(1, 1))
          (1): HistogramPlot()
        )
        (q): Quantizer(sigma=2)
      )
      (dec): EDSRDec(
        (head): Conv2d(5, 64, kernel_size=(1, 1), stride=(1, 1))
        (body): Sequential(
          (0): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (1): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (2): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (3): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (4): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (5): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (6): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (7): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (tail): Upsampler(
          (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): PixelShuffle(upscale_factor=2)
        )
      )
    )
    (1): Net(
      (enc): EDSRLikeEnc(
        Levels=-1.0,-0.9,-0.8,-0.8,-0.7,-0.6,-0.5,-0.4,-0.3,-0.2,-0.2,-0.1,0.0,0.1,0.2,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.8,0.9,1.0
        (down): Conv2d(64, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (body): Sequential(
          (0): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (1): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (2): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (3): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (4): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (5): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (6): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (7): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (to_q): Sequential(
          (0): Conv2d(64, 5, kernel_size=(1, 1), stride=(1, 1))
          (1): HistogramPlot()
        )
        (q): Quantizer(sigma=2)
      )
      (dec): EDSRDec(
        (head): Conv2d(5, 64, kernel_size=(1, 1), stride=(1, 1))
        (body): Sequential(
          (0): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (1): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (2): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (3): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (4): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (5): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (6): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (7): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (tail): Upsampler(
          (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): PixelShuffle(upscale_factor=2)
        )
      )
    )
    (2): Net(
      (enc): EDSRLikeEnc(
        Levels=-1.0,-0.9,-0.8,-0.8,-0.7,-0.6,-0.5,-0.4,-0.3,-0.2,-0.2,-0.1,0.0,0.1,0.2,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.8,0.9,1.0
        (down): Conv2d(64, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (body): Sequential(
          (0): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (1): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (2): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (3): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (4): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (5): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (6): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (7): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (to_q): Sequential(
          (0): Conv2d(64, 5, kernel_size=(1, 1), stride=(1, 1))
          (1): HistogramPlot()
        )
        (q): Quantizer(sigma=2)
      )
      (dec): EDSRDec(
        (head): Conv2d(5, 64, kernel_size=(1, 1), stride=(1, 1))
        (body): Sequential(
          (0): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (1): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (2): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (3): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (4): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (5): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (6): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (7): ResBlock(Conv(64x3)/Act/Conv(64x3))
          (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (tail): Upsampler(
          (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): PixelShuffle(upscale_factor=2)
        )
      )
    )
  )
  (prob_clfs): ModuleList(
    (0): AtrousProbabilityClassifier(C=3; K=10; Kp=120; rates=1,2,4)
    (1): AtrousProbabilityClassifier(C=5; K=10; Kp=150; rates=1,2,4)
    (2): AtrousProbabilityClassifier(C=5; K=10; Kp=150; rates=1,2,4)
  )
)
net parameters: 5,008,395
net to cpu
net init
--------------------------------------------------------------------------------
Created log_dir/1214_0509 cr oi...
Checkpoints will be saved to log_dir/1214_0509 cr oi/ckpts
iter 0
>> saving sampled to: log_dir/1214_0509 cr oi/train_sampled/000000
[save_img] img: (128, 128, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/000000_gt.png
[save_img] img: (128, 128, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/000000_rgb.png
[save_img] img: (128, 128, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/000000_rgb+bn0.png
[save_img] img: (128, 128, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/000000_rgb+bn0+bn1.png
[save_img] img: (536, 800, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/val_000000_gt.png
[save_img] img: (536, 800, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/val_000000_rgb.png
[save_img] img: (536, 800, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/val_000000_rgb+bn0.png
[save_img] img: (536, 800, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/val_000000_rgb+bn0+bn1.png
>> saving sampled to: log_dir/1214_0509 cr oi/train_sampled/000000
[save_img] img: (128, 128, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/000000_gt.png
[save_img] img: (128, 128, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/000000_rgb.png
[save_img] img: (128, 128, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/000000_rgb+bn0.png
[save_img] img: (128, 128, 3)  | out_p: log_dir/1214_0509 cr oi/train_sampled/000000/000000_rgb+bn0+bn1.png
iter 100
1214_0509    100: bpsp 9.750e+00 | loss 9.629e+00 // 1.064 img/s [3.10e-02 s/batch load]
iter 200
1214_0509    200: bpsp 9.581e+00 | loss 9.461e+00 // 1.204 img/s [4.21e-02 s/batch load]
iter 300
1214_0509    300: bpsp 9.591e+00 | loss 9.470e+00 // 1.235 img/s [4.08e-02 s/batch load]
